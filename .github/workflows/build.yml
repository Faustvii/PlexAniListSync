name: Build
on:
  pull_request:
    paths:
      - "src/**"
      - "test/**"
      - ".github/**"
      - "Dockerfile"
    branches:
      - main
  push:
    paths:
      - "src/**"
      - "test/**"
      - ".github/**"
      - "Dockerfile"
    branches:
      - main

permissions:
  contents: write # to be able to publish a GitHub release
  packages: write # to be able to publish a package
  pull-requests: write # to be able to comment on released pull requests
  issues: write # to be able to comment on released issues

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: .NET build and test
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
      - run: dotnet build ./src/PlexAniListSync.API/
      - run: dotnet test

  get_next_version:
    needs: build-and-test # Only if build and test passed
    runs-on: ubuntu-latest
    name: Fetch next version number
    steps:
      - uses: actions/checkout@v3

      - name: semantic release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19.0.5
          dry_run: true
          working_directory: .github/fetch_version

      - run: echo ${{ steps.semantic.outputs.new_release_version }}
      - run: echo ${{ steps.semantic.outputs.new_release_published }}

    outputs:
      create_release: ${{ steps.semantic.outputs.new_release_published }}
      new_version: ${{ steps.semantic.outputs.new_release_version }}

  build-and-publish-docker:
    needs: get_next_version
    if: needs.get_next_version.outputs.create_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/faustvii/plexanilistsync:latest
            ghcr.io/faustvii/plexanilistsync:${{ github.sha }}
            ghcr.io/faustvii/plexanilistsync:${{ needs.get_next_version.outputs.new_version }}

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Push updates to branch for major version
        if: steps.semantic.outputs.new_release_published == 'true'
        run: "git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:refs/heads/v${{steps.semantic.outputs.new_release_major_version}}"
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
