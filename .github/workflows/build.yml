name: Build
on:
  pull_request:
    paths:
      - 'src/**'
      - 'test/**'
      - '.github/**'
      - 'Dockerfile'
  push:
    paths:
      - 'src/**'
      - 'test/**'
      - '.github/**'
      - 'Dockerfile'

permissions:
  contents: write
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Dotnet Side by Side testing sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            6.0.x
      - run: dotnet build ./src/PlexAniListSync.API/
      - run: dotnet test ./test/PlexAniListSync.UnitTests/

  # build-and-publish-latest:
  #   needs: build-and-test # Only if build and test passed
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' # Running this job only for main branch

  #   steps:
  #   - uses: actions/checkout@v2 # Checking out the repo

  #   - name: Build and Publish latest Docker image
  #     uses: VaultVulp/gp-docker-action@1.2.0
  #     with:
  #       github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
  #       image-name: PlexAniListSync # Provide only Docker image name, tag will be automatically set to latest
  #       dockerfile: Dockerfile

  get_next_version:
    needs: build-and-test # Only if build and test passed
    runs-on: ubuntu-latest
    name: Fetch next version number
    steps:
      - uses: actions/checkout@v3

      - name: semantic release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19.0.5
          dry_run: true
          working_directory: .github/fetch_version

      - run: echo ${{ steps.semantic.outputs.new_release_version }}
      - run: echo ${{ steps.semantic.outputs.new_release_published }}

    outputs:
      create_release: ${{ steps.semantic.outputs.new_release_published }}
      new_version: ${{ steps.semantic.outputs.new_release_version }}

  build-and-publish-docker:
    needs: get_next_version
    if: needs.get_next_version.outputs.create_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/faustvii/plexanilistsync:latest
            ghcr.io/faustvii/plexanilistsync:${{ github.sha }}
            ghcr.io/faustvii/plexanilistsync:${{ needs.get_next_version.outputs.new_version }}

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push updates to branch for major version
        if: steps.semantic.outputs.new_release_published == 'true'
        run: "git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:refs/heads/v${{steps.semantic.outputs.new_release_major_version}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}