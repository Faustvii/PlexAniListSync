root = true

[*]
charset = utf-8
insert_final_newline = true
trim_trailing_whitespace = true

[*.cs]
# Organize usings
dotnet_sort_system_directives_first = true

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

# Require var all the time
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Expression-level preferences
csharp_prefer_braces = true:silent
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

# use int x = .. over Int32
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Don't use this. qualifier
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# Access modifiers
csharp_preferred_modifier_order = public, private, protected, internal, new, abstract, virtual, sealed, override, static, readonly, extern, unsafe, volatile, async:suggestion
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion
dotnet_style_readonly_field = true:suggestion

# Namespace settings
csharp_style_namespace_declarations = file_scoped:warning

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Use PascalCase for constant fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities = *
dotnet_naming_symbols.constant_fields.required_modifiers = const

# Define the 'private_fields' symbol group:
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

# Define the 'private_static_fields' symbol group
dotnet_naming_symbols.private_static_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields.required_modifiers = static

# Define the 'underscored' naming style
dotnet_naming_style.underscored.capitalization = camel_case
dotnet_naming_style.underscored.required_prefix = _

# Define the 'private_fields_underscored' naming rule
dotnet_naming_rule.private_fields_underscored.symbols = private_fields
dotnet_naming_rule.private_fields_underscored.style = underscored
dotnet_naming_rule.private_fields_underscored.severity = error

# Define the 'private_static_fields_none' naming rule
dotnet_naming_rule.private_static_fields_none.symbols = private_static_fields
dotnet_naming_rule.private_static_fields_none.style = underscored
dotnet_naming_rule.private_static_fields_none.severity = none

# Recommended .NET Analyzers severity
# See rules here: https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/
dotnet_diagnostic.CA1304.severity = suggestion
dotnet_diagnostic.CA1305.severity = suggestion
dotnet_diagnostic.CA1711.severity = suggestion
dotnet_diagnostic.CA1716.severity = suggestion
dotnet_diagnostic.CA1720.severity = suggestion
dotnet_diagnostic.CA1848.severity = suggestion
dotnet_diagnostic.CA2254.severity = suggestion


# https://github.com/microsoft/vs-threading/blob/master/doc/analyzers/index.md
dotnet_diagnostic.VSTHRD103.severity = error # VSTHRD103: Call async methods when in an async method
dotnet_diagnostic.VSTHRD100.severity = error # VSTHRD100: Avoid async void methods
dotnet_diagnostic.VSTHRD101.severity = error # VSTHRD101: Avoid unsupported async delegates
dotnet_diagnostic.VSTHRD107.severity = error # VSTHRD107: Await Task within using expression
dotnet_diagnostic.VSTHRD110.severity = error # VSTHRD110: Observe result of async calls
dotnet_diagnostic.VSTHRD002.severity = error # VSTHRD002: Avoid problematic synchronous waits
dotnet_diagnostic.VSTHRD111.severity = none # VSTHRD111: Use ConfigureAwait(bool)
dotnet_diagnostic.VSTHRD114.severity = error # VSTHRD114: Avoid returning a null Task
dotnet_diagnostic.VSTHRD200.severity = error # VSTHRD200: Use "Async" suffix for async methods
dotnet_diagnostic.CA2007.severity = none # CA2007: Consider calling ConfigureAwait on the awaited task

# https://www.nuget.org/packages/AsyncFixer/
dotnet_diagnostic.AsyncFixer01.severity = suggestion # AsyncFixer01: Unnecessary async/await usage
dotnet_diagnostic.AsyncFixer02.severity = error # AsyncFixer02: Long-running or blocking operations inside an async method
dotnet_diagnostic.AsyncFixer03.severity = error # AsyncFixer03: Fire & forget async void methods
dotnet_diagnostic.AsyncFixer04.severity = error # AsyncFixer04: Fire & forget async call inside a using block
dotnet_diagnostic.AsyncFixer05.severity = error # AsyncFixer05: Downcasting from a nested task to an outer task.

# https://github.com/meziantou/Meziantou.Analyzer/tree/master/docs
dotnet_diagnostic.MA0001.severity = suggestion # MA0001: StringComparison is missing
dotnet_diagnostic.MA0002.severity = suggestion # MA0002: IEqualityComparer<string> or IComparer<string> is missing
dotnet_diagnostic.MA0003.severity = suggestion # MA0003: Add argument name to improve readability
dotnet_diagnostic.MA0004.severity = none # MA0004: Use Task.ConfigureAwait(false)
dotnet_diagnostic.MA0005.severity = warning # MA0005: Use Array.Empty<T>()
dotnet_diagnostic.MA0006.severity = warning # MA0006: Use String.Equals instead of equality operator
dotnet_diagnostic.MA0007.severity = none # MA0007: Add a comma after the last value
dotnet_diagnostic.MA0008.severity = warning # MA0008: Add StructLayoutAttribute
dotnet_diagnostic.MA0009.severity = warning # MA0009: Add regex evaluation timeout
dotnet_diagnostic.MA0010.severity = warning # MA0010: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.MA0011.severity = suggestion # MA0011: IFormatProvider is missing
dotnet_diagnostic.MA0012.severity = warning # MA0012: Do not raise reserved exception type
dotnet_diagnostic.MA0013.severity = warning # MA0013: Types should not extend System.ApplicationException
dotnet_diagnostic.MA0014.severity = warning # MA0014: Do not raise System.ApplicationException type
dotnet_diagnostic.MA0015.severity = warning # MA0015: Specify the parameter name in ArgumentException
dotnet_diagnostic.MA0016.severity = none # MA0016: Prefer return collection abstraction instead of implementation
dotnet_diagnostic.MA0017.severity = warning # MA0017: Abstract types should not have public or internal constructors
dotnet_diagnostic.MA0018.severity = none # MA0018: Do not declare static members on generic types
dotnet_diagnostic.MA0019.severity = warning # MA0019: Use EventArgs.Empty
dotnet_diagnostic.MA0020.severity = suggestion # MA0020: Use direct methods instead of LINQ methods
dotnet_diagnostic.MA0021.severity = warning # MA0021: Use StringComparer.GetHashCode instead of string.GetHashCode
dotnet_diagnostic.MA0022.severity = error # MA0022: Return Task.FromResult instead of returning null
dotnet_diagnostic.MA0023.severity = warning # MA0023: Add RegexOptions.ExplicitCapture
dotnet_diagnostic.MA0024.severity = warning # MA0024: Use an explicit StringComparer when possible
dotnet_diagnostic.MA0025.severity = warning # MA0025: Implement the functionality instead of throwing NotImplementedException
dotnet_diagnostic.MA0026.severity = suggestion # MA0026: Fix TODO comment
dotnet_diagnostic.MA0027.severity = warning # MA0027: Do not remove original exception
dotnet_diagnostic.MA0028.severity = suggestion # MA0028: Optimize StringBuilder usage
dotnet_diagnostic.MA0029.severity = suggestion # MA0029: Combine LINQ methods
dotnet_diagnostic.MA0030.severity = warning # MA0030: Remove useless OrderBy call
dotnet_diagnostic.MA0031.severity = suggestion # MA0031: Optimize Enumerable.Count() usage
dotnet_diagnostic.MA0032.severity = suggestion # MA0032: Use an overload with a CancellationToken argument
dotnet_diagnostic.MA0033.severity = warning # MA0033: Do not tag instance fields with ThreadStaticAttribute
dotnet_diagnostic.MA0035.severity = warning # MA0035: Do not use dangerous threading methods
dotnet_diagnostic.MA0036.severity = suggestion # MA0036: Make class static
dotnet_diagnostic.MA0037.severity = error # MA0037: Remove empty statement
dotnet_diagnostic.MA0038.severity = suggestion # MA0038: Make method static
dotnet_diagnostic.MA0039.severity = error # MA0039: Do not write your own certificate validation method
dotnet_diagnostic.MA0040.severity = error # MA0040: Flow the cancellation token
dotnet_diagnostic.MA0041.severity = suggestion # MA0041: Make property static
dotnet_diagnostic.MA0042.severity = suggestion # MA0042: Do not use blocking calls in an async method
dotnet_diagnostic.MA0043.severity = suggestion # MA0043: Use nameof operator in ArgumentException
dotnet_diagnostic.MA0044.severity = suggestion # MA0044: Remove useless ToString call
dotnet_diagnostic.MA0045.severity = error # MA0045: Do not use blocking call in a sync method (need to make containing method async)
dotnet_diagnostic.MA0046.severity = warning # MA0046: Use EventHandler<T> to declare events
dotnet_diagnostic.MA0047.severity = warning # MA0047: Declare types in namespaces
dotnet_diagnostic.MA0048.severity = none # MA0048: File name must match type name
dotnet_diagnostic.MA0049.severity = none # MA0049: Type name should not match containing namespace
dotnet_diagnostic.MA0050.severity = suggestion # MA0050: Validate arguments correctly in iterator methods
dotnet_diagnostic.MA0051.severity = suggestion # MA0051: Method is too long
dotnet_diagnostic.MA0052.severity = suggestion # MA0052: Replace constant Enum.ToString with nameof
dotnet_diagnostic.MA0053.severity = suggestion # MA0053: Make class sealed
dotnet_diagnostic.MA0054.severity = warning # MA0054: Embed the caught exception as innerException
dotnet_diagnostic.MA0055.severity = warning # MA0055: Do not use destructor
dotnet_diagnostic.MA0056.severity = warning # MA0056: Do not call overridable members in constructor
dotnet_diagnostic.MA0057.severity = suggestion # MA0057: Class name should end with 'Attribute'
dotnet_diagnostic.MA0058.severity = suggestion # MA0058: Class name should end with 'Exception'
dotnet_diagnostic.MA0059.severity = suggestion # MA0059: Class name should end with 'EventArgs'
dotnet_diagnostic.MA0060.severity = warning # MA0060: The value returned by Stream.Read/Stream.ReadAsync is not used
dotnet_diagnostic.MA0061.severity = warning # MA0061: Method overrides should not change parameter defaults
dotnet_diagnostic.MA0062.severity = warning # MA0062: Non-flags enums should not be marked with "FlagsAttribute"
dotnet_diagnostic.MA0063.severity = suggestion # MA0063: Use Where before OrderBy
dotnet_diagnostic.MA0064.severity = warning # MA0064: Avoid locking on publicly accessible instance
dotnet_diagnostic.MA0065.severity = warning # MA0065: Default ValueType.Equals or HashCode is used for struct's equality
dotnet_diagnostic.MA0066.severity = warning # MA0066: Hash table unfriendly type is used in a hash table
dotnet_diagnostic.MA0067.severity = suggestion # MA0067: Use Guid.Empty
dotnet_diagnostic.MA0068.severity = warning # MA0068: Invalid parameter name for nullable attribute
dotnet_diagnostic.MA0069.severity = warning # MA0069: Non-constant static fields should not be visible
dotnet_diagnostic.MA0070.severity = warning # MA0070: Obsolete attributes should include explanations
dotnet_diagnostic.MA0071.severity = suggestion # MA0071: Avoid using redundant else
dotnet_diagnostic.MA0072.severity = warning # MA0072: Do not throw from a finally block
dotnet_diagnostic.MA0073.severity = suggestion # MA0073: Avoid comparison with bool constant
dotnet_diagnostic.MA0074.severity = warning # MA0074: Avoid implicit culture-sensitive methods
dotnet_diagnostic.MA0075.severity = suggestion # MA0075: Do not use implicit culture-sensitive ToString
dotnet_diagnostic.MA0076.severity = suggestion # MA0076: Do not use implicit culture-sensitive ToString in interpolated strings
dotnet_diagnostic.MA0077.severity = warning # MA0077: A class that provides Equals(T) should implement IEquatable<T>
dotnet_diagnostic.MA0078.severity = suggestion # MA0078: Use 'Cast' instead of 'Select' to cast
dotnet_diagnostic.MA0079.severity = suggestion # MA0079: Flow the cancellation token using .WithCancellation()
dotnet_diagnostic.MA0080.severity = error # MA0080: Use a cancellation token using .WithCancellation()
dotnet_diagnostic.MA0081.severity = warning # MA0081: Method overrides should not omit params keyword
dotnet_diagnostic.MA0082.severity = warning # MA0082: NaN should not be used in comparisons
dotnet_diagnostic.MA0083.severity = warning # MA0083: ConstructorArgument parameters should exist in constructors
dotnet_diagnostic.MA0084.severity = warning # MA0084: Local variable should not hide other symbols
dotnet_diagnostic.MA0085.severity = warning # MA0085: Anonymous delegates should not be used to unsubscribe from Events
dotnet_diagnostic.MA0086.severity = warning # MA0086: Do not throw from a destructor
dotnet_diagnostic.MA0087.severity = warning # MA0087: Parameters with [DefaultParameterValue] attributes should also be marked [Optional]
dotnet_diagnostic.MA0088.severity = warning # MA0088: Use [DefaultParameterValue] instead of [DefaultValue]
dotnet_diagnostic.MA0089.severity = suggestion # MA0089: Optimize string method usage
dotnet_diagnostic.MA0090.severity = suggestion # MA0090: Remove empty else/finally block
dotnet_diagnostic.MA0091.severity = warning # MA0091: Sender should be 'this' for instance events
dotnet_diagnostic.MA0092.severity = warning # MA0092: Sender should be 'null' for static events
dotnet_diagnostic.MA0093.severity = warning # MA0093: EventArgs should not be null
dotnet_diagnostic.MA0094.severity = warning # MA0094: A class that provides CompareTo(T) should implement IComparable<T>
dotnet_diagnostic.MA0095.severity = warning # MA0095: A class that implements IEquatable<T> should override Equals(object)
dotnet_diagnostic.MA0096.severity = warning # MA0096: A class that implements IComparable<T> should also implement IEquatable<T>
dotnet_diagnostic.MA0097.severity = suggestion # MA0097: A class that implements IComparable<T> or IComparable should override comparison operators
dotnet_diagnostic.MA0098.severity = suggestion # MA0098: Use indexer instead of LINQ methods
dotnet_diagnostic.MA0099.severity = warning # MA0099: Use Explicit enum value instead of 0
dotnet_diagnostic.MA0100.severity = warning # MA0100: Await task before disposing resources
